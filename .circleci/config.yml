---
version: 2.1

executors:
  molecule:
    docker:
      - image: ghcr.io/docker-images-mamono210/circleci-executors_molecule/molecule:ec2
    resource_class: medium
  trailing-whitespace:
    docker:
      - image: ghcr.io/docker-images-mamono210/circleci-executors/trailing-whitespace:latest
    resource_class: small

orbs:
  ansible-lint: orbss/ansible-lint@0.0.3
  aws-cli: circleci/aws-cli@3.1.1
  yamllint: orbss/yamllint@0.0.4

jobs:
  ansible-lint:
    executor: ansible-lint/default
    steps:
      - checkout
      - ansible-lint/execute:
          molecule-role-test: true
  molecule:
    executor: molecule
    parameters:
      ami-id:
        type: string
      checkout-path:
        type: string
      ec2-tag:
        type: string
      instance-type:
        type: string
      scenario-name:
        type: string
      ssh-user:
        type: string
    steps:
      - checkout:
          path: << parameters.checkout-path >>
      - aws-cli/setup
      - aws-cli/setup:
          profile-name: default
          role-arn: ${AWS_ROLE_ARN}
          role-session-name: "<< parameters.ec2-tag >>"
          session-duration: '2100'
      - run:
          name: Set timestamp for making sure Molecule would create unique AWS resources
          command: |
            cd << parameters.checkout-path >>

            TIMESTAMP=$(date --date "9 hours" "+%Y%m%d_%H:%M:%S")
            AUTHOR_EMAIL=$(git show -s --format='%ae' ${CIRCLE_SHA1})

            echo "export CREATED_BY=${AUTHOR_EMAIL}" >> $BASH_ENV
            echo "export KEYPAIR_NAME=<< parameters.ec2-tag >>_${TIMESTAMP}" >> $BASH_ENV
            echo "export PLATFORM_NAME=<< parameters.ec2-tag >>_${TIMESTAMP}" >> $BASH_ENV
            echo "export SECURITY_GROUP_NAME=<< parameters.ec2-tag >>_${TIMESTAMP}" >> $BASH_ENV
            echo "export TAG_NAME=<< parameters.ec2-tag >>_${TIMESTAMP}" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Set EC2 instance type
          command: |
            echo "export INSTANCE_TYPE=<< parameters.instance-type >>" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Install required Ansible collections and roles
          command: |
            cd << parameters.checkout-path >>
            ansible-galaxy collection install community.molecule
            ansible-galaxy install -r molecule/default/requirements.yml
      - run:
          name: Test with Molecule
          command: |
            cd << parameters.checkout-path >>
            molecule test --scenario-name << parameters.scenario-name >>
          environment:
            AMI_ID: "<< parameters.ami-id >>"
            ANSIBLE_FORCE_COLOR: '1'
            ANSIBLE_TASK_TIMEOUT: '1800'
            # AWS_DEFAULT_REGION: sotred in CircleCI environment variables
            # CREATED_BY: stored in CircleCI environment variables
            # EC2_REGION: stored in CircleCI environment variables
            # INSTANCE_TYPE: stored in CircleCI environment variables
            # KEYPAIR_NAME: sotred in CircleCI environment variables
            # PLATFORM_NAME: sotred in CircleCI environment variables
            PROFILE_TASKS_SORT_ORDER: 'none'
            PROFILE_TASKS_TASK_OUTPUT_LIMIT: '200'
            PY_COLORS: '1'
            # SECURITY_GROUP_NAME: sotred in CircleCI environment variables
            SSH_USER: "<< parameters.ssh-user >>"
            # VPC_SUBNET_ID: sotred in CircleCI environment variables
            TZ: 'Asia/Tokyo'
          no_output_timeout: 35m
      - run:
          name: Show Ansible version
          command: |
            pip list | grep ansible \
            | GREP_COLORS='mt=01;34' egrep --color=always '[[:digit:]]' \
            | GREP_COLORS='mt=01;34' egrep --color=always '\.' \
            | GREP_COLORS='mt=01;33' egrep --color=always 'ansible.* '
            ansible --version
      - run:
          name: Show Molecule version
          command: molecule --version
  yamllint:
    executor: yamllint/default
    steps:
      - checkout
      - yamllint/execute
  trailing-whitespace:
    executor: trailing-whitespace
    steps:
      - checkout
      - run:
          name: Execute trailing-whitespace
          command: trailing-whitespace

workflows:
  version: 2.1
  build:
    jobs:
      - trailing-whitespace
      - yamllint:
          requires:
            - trailing-whitespace
      - ansible-lint:
          requires:
            - yamllint
      - molecule:
          ami-id: 'ami-0b6da95c5acd0be7c'
          checkout-path: 'centos_update'
          ec2-tag: 'circleci_ansible-roles_centos_update_centos7_default'
          instance-type: 't2.medium'
          scenario-name: default
          ssh-user: centos
          context: aws-oidc
          requires:
            - ansible-lint
      - molecule:
          ami-id: 'ami-06f0acf3be02f9f64'
          checkout-path: 'centos_update'
          ec2-tag: 'circleci_ansible-roles_centos_update_centos-stream8'
          instance-type: 't4g.medium'
          scenario-name: default
          ssh-user: centos
          context: aws-oidc
          requires:
            - ansible-lint
